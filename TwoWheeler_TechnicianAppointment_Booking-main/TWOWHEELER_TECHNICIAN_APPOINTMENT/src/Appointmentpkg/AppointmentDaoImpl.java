package Appointmentpkg;

import dbPkg.Database;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;



public class AppointmentDaoImpl implements AppointmentDoa {

	public Appointment get(String id) throws SQLException {
		Connection con=Database.getConnection();
		Appointment appointment=null;
		
		String sql="select appointmentId,customerId,serviceId,bike_no,technicianId"+
					" from Appointment A"+
//					" join Customer C On A.customerId=C.customerId"+
//					" join Service S on A.serviceId=S.serviceId"+
//					" join Technician T on A.technicianId=T.technicianId"+
//					" join Bike B on A.bike_no=B.bike_no"+
					" where appointmentId = ?";
		
		PreparedStatement ps=con.prepareStatement(sql);
		
		ps.setString(1, id);
		
		ResultSet rs=ps.executeQuery();
		if(rs.next())
		{
			String appointmentId=rs.getString("appointmentId");
			String customerId=rs.getString("customerId");
			String bike_no=rs.getString("bike_no");
			String technicianId=rs.getString("technicianId");
			String serviceId=rs.getString("serviceId");
			
			appointment = new Appointment(appointmentId,customerId,serviceId,technicianId,bike_no);
		}
		return appointment;
	}

	public List<Appointment> getAll() throws SQLException {
		Connection con=Database.getConnection();
		List<Appointment> appointments=new ArrayList<Appointment>();
		
		String sql="select A.appointmentId,A.customerId,A.serviceId,A.bike_no,A.technicianId "+
				" from Appointment A "+
				" join Customer C On A.customerId=C.customerId "+
				" join Service S on A.serviceId=S.serviceId "+
				" join Technician T on A.technicianId=T.technicianId "+
				" join Bike B on A.bike_no=B.bike_no";
//		System.out.println(sql);
		PreparedStatement ps=con.prepareStatement(sql);
		ResultSet rs=ps.executeQuery();
		while(rs.next())
		{
			Appointment appointment=new Appointment(rs.getString("appointmentId"),rs.getString("customerId"),rs.getString("serviceId"),rs.getString("technicianId"),rs.getString("bike_no"));
			appointments.add(appointment);
		}
		
		return appointments;
	}

	public int insert(Appointment appointment) throws SQLException {
		Connection con=Database.getConnection();
		String sql = "insert into Appointment"+
					 "(appointmentId,customerId,serviceId,technicianId,bike_no)"+
					 "values(?,?,?,?,?)";
//		System.out.println(sql);
		PreparedStatement ps=con.prepareStatement(sql);
//		TODO autogenerated code
		ps.setString(1, appointment.getAppointementId());
		ps.setString(2, appointment.getCustomer().getCustomerId());
		ps.setString(3, appointment.getService().getServiceId());
		ps.setString(4, appointment.getTechnician().getTechnicianId());
		ps.setString(5,appointment.getBike().getBike_no());
		int result=ps.executeUpdate();
		return result;
	}

	public int update(Appointment appointment, String appointementId)
			throws SQLException {
		Connection con=Database.getConnection();
		String sql = "update Appointment set customerId=?,serviceId=?,technicianId=?,bike_no=?"+
					 " where appointmentId=? ";
		PreparedStatement ps=con.prepareStatement(sql);
		ps.setString(1, appointment.getCustomer().getCustomerId());
		ps.setString(2, appointment.getService().getServiceId());
		ps.setString(3, appointment.getTechnician().getTechnicianId());
		ps.setString(4, appointment.getBike().getBike_no());
		ps.setString(5, appointementId);
		int result=ps.executeUpdate();
		return result;
	}

	public int delete(Appointment appointment) throws SQLException {
		Connection con=Database.getConnection();
		String sql="DELETE from Appointment where appointmentId=?";
		PreparedStatement ps= con.prepareStatement(sql);
		
		ps.setString(1, appointment.getAppointementId());
		int result=ps.executeUpdate();
		return result;
	}

}
